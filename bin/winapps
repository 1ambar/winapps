#!/usr/bin/env bash

if [ ! -f "${HOME}/.config/winapps/winapps.conf" ] && [ ! -f "${HOME}/.winapps" ]; then
	echo "You need to create a ~/.config/winapps/winapps.conf configuration. Exiting..."
	exit
fi

DIR="$(dirname "$(readlink -f "$0")")"
RUN="$(date)-${RANDOM}"

if [ ! -d "${HOME}/.local/share/winapps" ]; then
	mkdir -p "${HOME}/.local/share/winapps"
fi

RDP_SCALE=100

if [ -f "${HOME}/.config/winapps/winapps.conf" ]; then
	. "${HOME}/.config/winapps/winapps.conf"
else
	. "${HOME}/.winapps"
fi

function dprint() {
	if [ "${DEBUG}" = "true" ]; then
		echo "[${RUN}] ${1}" >> "${HOME}/.local/share/winapps/winapps.log"
	fi
}

dprint "START"

if [ -z "$(which gstat)" ]; then
  echo "You need gnu coreutils! (gstat)"
  echo "  brew install coreutils"
fi

if [ -f "${HOME}/.local/share/winapps/run" ]; then
	LAST_RAN=$(gstat -t -c %Y "${HOME}/.local/share/winapps/run")
	dprint "LAST_RAN:${LAST_RAN}"
	touch "${HOME}/.local/share/winapps/run"
	THIS_RUN=$(gstat -t -c %Y "${HOME}/.local/share/winapps/run")
	dprint "THIS_RUN:${THIS_RUN}"
	if (( $THIS_RUN - $LAST_RAN < 2 )); then
		exit
	fi
else
	touch "${HOME}/.local/share/winapps/run"
fi

if [ -z "$(which xfreerdp)" ]; then
	echo "You need xfreerdp!"
	echo "  brew install freerdp"
	exit
fi

if [ -z "${RDP_IP}" ]; then
  echo "Specify an IP! Automatic IP discovery is not supported on macOS!"
  exit
fi

dprint "1:${1}"
dprint "2:${2}"
dprint "@:${@}"

MULTI_FLAG="span"
if [ "${MULTIMON}" = "true" ]; then
	MULTI_FLAG="multimon"
fi

if [ "${1}" = "windows" ]; then
	xfreerdp ${RDP_FLAGS} /d:"${RDP_DOMAIN}" /u:"${RDP_USER}" /p:"${RDP_PASS}" /v:${RDP_IP} /scale:${RDP_SCALE} /dynamic-resolution +auto-reconnect +home-drive /wm-class:"Microsoft Windows" 1> /dev/null 2>&1 &
elif [ "${1}" = "check" ]; then
	dprint "CHECK"
	xfreerdp ${RDP_FLAGS} /d:"${RDP_DOMAIN}" /u:"${RDP_USER}" /p:"${RDP_PASS}" /v:${RDP_IP} +auto-reconnect +home-drive -wallpaper /scale:${RDP_SCALE} /dynamic-resolution /${MULTI_FLAG} /app:"explorer.exe"
elif [ "${1}" = "manual" ]; then
	dprint "MANUAL:${2}"
	xfreerdp ${RDP_FLAGS} /d:"${RDP_DOMAIN}" /u:"${RDP_USER}" /p:"${RDP_PASS}" /v:${RDP_IP} +auto-reconnect +home-drive -wallpaper /scale:${RDP_SCALE} /dynamic-resolution /${MULTI_FLAG} /app:"${2}" 1> /dev/null 2>&1 &
elif [ "${1}" != "install" ]; then
  echo "This command is unsupported on macOS!"
  exit
fi

dprint "END"
